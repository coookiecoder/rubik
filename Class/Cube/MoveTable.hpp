#ifndef MOVETABLE_HPP
#define MOVETABLE_HPP

struct MoveTable {
    int cp[8];
    int co[8];
    int ep[12];
    int eo[12];
};

// Identity move (for initialization)
const MoveTable MOVE_ID = {
    {0,1,2,3,4,5,6,7},  // cp
    {0,0,0,0,0,0,0,0},  // co
    {0,1,2,3,4,5,6,7,8,9,10,11}, // ep
    {0,0,0,0,0,0,0,0,0,0,0,0}    // eo
};

const MoveTable MOVE_U = {
    {3, 0, 1, 2, 4, 5, 6, 7},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
};

const MoveTable MOVE_D = {
    {0,1,2,3,5,6,7,4},
    {0,0,0,0,0,0,0,0},
    {0,1,2,3,5,6,7,4,8,9,10,11},
    {0,0,0,0,0,0,0,0,0,0,0,0}
};

const MoveTable MOVE_F = {
    {4,0,2,3,5,1,6,7},
    {1,2,0,0,1,2,0,0},
    {0,9,2,3,4,8,6,7,1,5,10,11},
    {0,1,0,0,0,1,0,0,1,1,0,0}
};

const MoveTable MOVE_B = {
    {0,1,3,7,4,5,2,6},
    {0,0,1,2,0,0,1,2},
    {0,1,2,11,4,5,6,10,8,9,3,7},
    {0,0,0,1,0,0,0,1,0,0,1,1}
};

const MoveTable MOVE_L = {
    {0,5,1,3,4,6,2,7},
    {0,1,2,0,0,1,2,0},
    {0,1,10,3,4,5,9,7,8,2,6,11},
    {0,0,1,0,0,0,1,0,0,1,1,0}
};

const MoveTable MOVE_R = {
    {4, 1, 2, 0, 7, 5, 6, 3},
    {2, 0, 0, 1, 1, 0, 0, 2},
    {8, 1, 2, 3, 11, 5, 6, 7, 4, 9, 10, 0},
    {1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1}
};

const MoveTable MOVE_TABLES[6] = {MOVE_U, MOVE_D, MOVE_L, MOVE_B, MOVE_F, MOVE_R};

#endif
